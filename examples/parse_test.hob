fun arg1(num: i64, a: i64) -> i64 {
    var res: i64;
	asm (rax, rdi, rcx, r11) {
		mov $rax, num;
		mov $rdi, a;
		syscall;
		mov [res], $rax;
	}
	return res;
}

fun arg3(num: i64, a: i64, b: i64, c: i64) -> i64 {
    var res: i64;
	asm (rax, rdi, rsi, rdx, rcx, r11) {
		mov $rax, num;
		mov $rdi, a;
		mov $rsi, b;
		mov $rdx, c;
		syscall;
		mov [res], $rax;
	}
	return res;
}

fun exit(status: i64) -> void {
	arg1(60, status);
}

fun write_to(fd: i32, str: []u8) -> i64 {
    var str_ptr = str.raw;
    var str_ptr_conv = str_ptr as i64;
    return arg3(1, fd as i64, str_ptr_conv, str.length as i64);
}

fun _start() -> void {
    write_to(0, "hello, world!\n");
    exit(123);
}