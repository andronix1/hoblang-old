type Fd = i32;

extern(write) fun (Fd) write_raw(data: *u8, count: usize) -> i32

const STDOUT: i32 = 1;

fun (Fd) write_slice(slice: []u8) -> bool {
    return self.write_raw(slice.ptr, slice.length) as usize == slice.length;
}

fun (i32) print(fd: Fd) -> bool {
    var i: i32 = 0;
    var buf: u8;
    while self > 0 {
        buf = (self % 10) as u8 + '0';        
        STDOUT.write_raw(&buf, 1);
        self /= 10;
    }
    return true;
}

global(main) fun main() -> i32 {
    STDOUT.write_slice("hello, world!\n");
    (123 as i32).print(STDOUT);
    STDOUT.write_slice("\n");
    return 0;
}
