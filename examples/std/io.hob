import "linux/io.hob" as io;

const FD_STDOUT: io::Fd = io::FD_STDOUT;

fun fd_remains(fd: io::Fd) -> i64 {
    var pos = io::lseek(fd, 0, io::SEEK_CUR);
    var end_pos = io::lseek(fd, 0, io::SEEK_END);
    io::lseek(fd, pos, io::SEEK_SET);
    return end_pos - pos;
}

fun full_forward(from: io::Fd, to: io::Fd) -> void {
    var offset = 0 as i64;
    io::lseek(from, 0, io::SEEK_SET);
    io::sendfile(to, from, &offset, fd_remains(from));
}

fun write_to(fd: io::Fd, str: []u8) -> void {
    io::write(fd, str.raw, str.length as i64);
}

fun read_from(fd: io::Fd, output: *[]u8) -> i64 {
    return io::read(fd, output.*.raw, output.*.length as i64);
}

fun print(str: []u8) -> void {
    write_to(io::FD_STDOUT, str);
}

fun println(str: []u8) -> void {
    print(str);
    print("\n");
}
